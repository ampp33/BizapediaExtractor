package https.www_bizapedia_com;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.10
 * 2017-02-28T20:52:05.952-05:00
 * Generated source version: 3.1.10
 * 
 */
@WebServiceClient(name = "bdmservice", 
                  wsdlLocation = "https://www.bizapedia.com/bdmservice.asmx?WSDL",
                  targetNamespace = "https://www.bizapedia.com/") 
public class BdmService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("https://www.bizapedia.com/", "bdmservice");
    public final static QName BdmserviceSoap12 = new QName("https://www.bizapedia.com/", "bdmserviceSoap12");
    public final static QName BdmserviceSoap = new QName("https://www.bizapedia.com/", "bdmserviceSoap");
    static {
        URL url = null;
        try {
            url = new URL("https://www.bizapedia.com/bdmservice.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(BdmService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "https://www.bizapedia.com/bdmservice.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public BdmService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public BdmService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BdmService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public BdmService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public BdmService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public BdmService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns BdmserviceSoap
     */
    @WebEndpoint(name = "bdmserviceSoap12")
    public BdmserviceSoap getBdmserviceSoap12() {
        return super.getPort(BdmserviceSoap12, BdmserviceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BdmserviceSoap
     */
    @WebEndpoint(name = "bdmserviceSoap12")
    public BdmserviceSoap getBdmserviceSoap12(WebServiceFeature... features) {
        return super.getPort(BdmserviceSoap12, BdmserviceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns BdmserviceSoap
     */
    @WebEndpoint(name = "bdmserviceSoap")
    public BdmserviceSoap getBdmserviceSoap() {
        return super.getPort(BdmserviceSoap, BdmserviceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BdmserviceSoap
     */
    @WebEndpoint(name = "bdmserviceSoap")
    public BdmserviceSoap getBdmserviceSoap(WebServiceFeature... features) {
        return super.getPort(BdmserviceSoap, BdmserviceSoap.class, features);
    }

}
